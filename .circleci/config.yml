version: 2
jobs:
  buildlib:
    docker:
      - image: adoptopenjdk/openjdk8
    steps:
      - checkout
      - restore_cache:
          keys: [dependencies]
      - run: 
          name: Build library
          command: cd tinder && ./mvnw clean install
      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/junit/ \;
          when: always
      - run:
          name: Import GPG keys
          command: |
            apt-get update && apt-get install -y gpg
            echo "Importing key..."
            echo $GPG_SECRET_KEYS | base64 --decode | $GPG_EXECUTABLE --import --no-tty --batch --yes
            echo "Importing trust..."
            echo $GPG_OWNERTRUST | base64 --decode | $GPG_EXECUTABLE --import-ownertrust --no-tty --batch --yes
      - run: 
          name: Publish library
          command: cd tinder && ./mvnw deploy -P release --settings ossrh_settings.xml
      - store_test_results:
          path: ~/junit
      - store_artifacts:
          path: ~/junit
      - save_cache:
          key: dependencies
          paths: [~/.m2]
  buildarchetype:
    docker:
      - image: adoptopenjdk/openjdk8
    steps:
      - checkout
      - restore_cache:
          keys: [dependencies]
      - setup_remote_docker:
          docker_layer_caching: true
      - run: cd tinderarchetype && ./mvnw package
      - save_cache:
          key: dependencies
          paths: [~/.m2]
      - persist_to_workspace:
          root: .
          paths:
            - tinderarchetype/target/*.jar
  pusharchetype:
    machine:
      docker_layer_caching: true
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Install awscli
          command: sudo apt-get install awscli
      - run:
          name: Sign into AWS ecr
          command: $(aws ecr get-login --no-include-email --region ${AWS_DEFAULT_REGION})
      - run:
          name: Push image
          command: |
            export FULL_IMAGE_NAME="${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/tinder/tinderarchetype:master"
            docker build -t "${FULL_IMAGE_NAME}" tinderarchetype
            #docker push ${FULL_IMAGE_NAME}

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - buildlib:
          context: mvn_central
      - buildarchetype:
          requires: [buildlib]
      - pusharchetype:
          context: aws
          requires: [buildarchetype]
