<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <packaging>jar</packaging>

  <groupId>archetype</groupId>
  <artifactId>tinder-archetype</artifactId>
  <version>1.1-SNAPSHOT</version>

  <properties>

    <!--  -->
    <api.name>API</api.name>
    <api.version>1</api.version>
    <api.resourcepackage>api.resources</api.resourcepackage>

    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>

    <swagger-ui.version>3.17.0</swagger-ui.version>

    <docker.image>${project.groupId}/${project.artifactId}</docker.image>

  </properties>

  <dependencies>
    <dependency>
      <groupId>com.github.raffaeleragni</groupId>
      <artifactId>tinder-core</artifactId>
      <version>1.1</version>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <version>1.4.197</version>
    </dependency>
    <!-- APT -->
    <!-- Normally one would use the maven compiler plugin with annotationProcessingPaths but that does not work
    for IDEs to find sources aftwrwards. Instead we add the dependency in the dependency list directly but
    as 'optional' so won't be included transitively. -->
    <dependency>
      <groupId>com.google.dagger</groupId>
      <artifactId>dagger-compiler</artifactId>
      <version>2.21</version>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.immutables</groupId>
      <artifactId>value</artifactId>
      <version>2.7.5</version>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>com.github.raffaeleragni</groupId>
      <artifactId>tinder-processors</artifactId>
      <version>1.1</version>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>42.2.5</version>
    </dependency>
  </dependencies>

  <build>
    <finalName>app</finalName>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.0</version>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.3</version>
        <executions>
          <execution>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <!-- attached to Maven test phase -->
          <execution>
            <id>report</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- Build the swagger yaml statically -->
      <plugin>
        <groupId>com.github.kongchen</groupId>
        <artifactId>swagger-maven-plugin</artifactId>
        <version>3.1.8</version>
        <configuration>
          <apiSources>
            <apiSource>
              <springmvc>false</springmvc>
              <locations>${api.resourcepackage}</locations>
              <swaggerDirectory>src/main/resources/docs</swaggerDirectory>
              <swaggerFileName>swagger</swaggerFileName>
              <outputFormats>yaml</outputFormats>
              <info>
                <title>${api.name}</title>
                <version>${api.version}</version>
              </info>
            </apiSource>
          </apiSources>
        </configuration>
        <executions>
          <execution>
            <id>create-swagger-yaml</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>generate</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
          <!-- This is needed later for the swagger pluging to generate, but it's not a good package of dependencies to carry (for jdk9+)-->
          <dependency>
            <groupId>javax.xml</groupId>
            <artifactId>jaxb-api</artifactId>
            <version>2.1</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <!-- Download Swagger UI webjar. -->
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.1.1</version>
        <executions>
          <execution>
            <id>unpack-swagger-ui</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.webjars</groupId>
                  <artifactId>swagger-ui</artifactId>
                  <version>${swagger-ui.version}</version>
                </artifactItem>
              </artifactItems>
              <outputDirectory>${project.build.directory}/swagger-ui</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <!-- Replace the OpenAPI specification example URL with the local one. -->
        <groupId>com.google.code.maven-replacer-plugin</groupId>
        <artifactId>replacer</artifactId>
        <version>1.5.3</version>
        <executions>
          <execution>
            <id>replace-swagger-ui</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>replace</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <file>${project.build.directory}/swagger-ui/META-INF/resources/webjars/swagger-ui/${swagger-ui.version}/index.html</file>
          <replacements>
            <replacement>
              <token>http://petstore.swagger.io/v2/swagger.json</token>
              <value>/swagger.yaml</value>
            </replacement>
          </replacements>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.1.0</version>
        <executions>
          <execution>
            <id>copy-swagger</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.outputDirectory}/docs</outputDirectory>
              <resources>
                <resource>
                  <directory>${project.build.directory}/swagger-ui/META-INF/resources/webjars/swagger-ui/${swagger-ui.version}</directory>
                  <filtering>true</filtering>
                  <includes>
                    <include>**/index.html</include>
                    <include>**/swagger-ui.css</include>
                    <include>**/favicon-32x32.png</include>
                    <include>**/favicon-16x16.png</include>
                    <include>**/swagger-ui-bundle.js</include>
                    <include>**/swagger-ui-standalone-preset.js</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.1.1</version>
        <configuration>
          <archive>
            <manifest>
              <addClasspath>true</addClasspath>
              <mainClass>api.App</mainClass>
            </manifest>
          </archive>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>3.2.1</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <minimizeJar>true</minimizeJar>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- This builds and deploys a docker image -->
      <plugin>
        <groupId>com.spotify</groupId>
        <artifactId>dockerfile-maven-plugin</artifactId>
        <version>1.4.10</version>
        <executions>
          <execution>
            <id>build</id>
            <phase>package</phase>
            <goals>
              <goal>build</goal>
            </goals>
          </execution>
          <execution>
            <id>push</id>
            <phase>deploy</phase>
            <goals>
              <goal>push</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <repository>${docker.image}</repository>
          <tag>${project.version}</tag>
        </configuration>
      </plugin>
    </plugins>
  </build>

</project>
